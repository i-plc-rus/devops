117
docker-compose.yml
ошибки
В конфигурации отсутствуют метрики для самих микросервисов (service-a и service-b).
Нет правил алертинга в Prometheus.
Конфигурация Prometheus не описана.

playbook.yml
ошибки
Отсутствие динамического распределения ролей
Отсутствие модульных ролей
Недостаточно проверок:
Нет проверки наличия Docker или Kubernetes перед установкой, что может привести к ошибкам при повторном выполнении playbook-а.
Не учтена поддержка рабочих узлов
Устаревший сетевой плагин
Flannel — базовый выбор, но в современных кластерах часто предпочитают Calico, Cilium или другие плагины для расширенных функций
Отсутствие мониторинга и логировани


.gitlab-ci.yml
ошибки
Тестирование только на main
Реализация тестов для продакшн-окружения
Параллельность Тестирование
Дублирование конфигурации Kubernetes
Версии Docker-образов
    Вместо использования CI_COMMIT_SHA для тегирования, можно использовать версии (например, через Git тег), чтобы упростить управление версиями образов и откатами

prometheus.yaml
Отсутствие меток для namespace и pod
    Хотя в relabel_configs используется переименование меток, нет явной настройки для добавления меток, таких как namespace или pod. Это полезно для фильтрации метрик по различным аспектам Kubernetes (например, метрики от подов разных сервисов).
Проблемы с настройкой relabel_configs
Подключение только одного источника для сбора метрик
Добавление лимитов
    Можно добавить лимиты на количество метрик или на частоту сбора для повышения производительности и уменьшения нагрузки на систему мониторинга.
Настройка более сложных правил алертов

Вывод:
Сильные стороны:
Знания Prometheus и Kubernetes:
Умение настроить Prometheus для сбора метрик с подов Kubernetes с использованием динамического обнаружения сервисов (через kubernetes_sd_configs).
Знание принципов работы с аннотациями в Kubernetes для фильтрации подов, которые должны быть мониторированы.
Настройка alerting для интеграции с Alertmanager, что говорит о внимании к возможным алертам и мониторингу состояния системы.
Использование шаблонов конфигурации:
Конфигурация для использования меток и переименования с помощью relabel_configs, что улучшает возможность фильтрации и группировки метрик в Prometheus.
Разделение конфигурации:
Правильное подключение внешних файлов с правилами алертов (alert.rules), что позволяет централизованно управлять настройками алертов.

Этот специалист демонстрирует хорошие базовые и средние навыки

CI/CD пайплайн Уровень: Средний.
Ansible Уровень: Средний.
Kubernetes манифесты Уровень: Высокий
Docker Compose Уровень: Высокий
Prometheus конфигурация: Уровень: Высокий.
Общий уровень специалиста: Общий уровень: Выше среднего.